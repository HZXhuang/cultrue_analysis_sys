<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.RawCommentMapper">

    <resultMap id="commentsByPage" type="com.example.demo.entity.RawComment">
        <id column="id" property="id" />
        <result property="workId" column="workId" />
        <result property="sentiment" column="sentiment" />
        <result property="reviewer" column="reviewer" />
        <result property="homeUrl" column="homeUrl" />
        <result property="avatar" column="avatar" />
        <result property="followers" column="followers" />
        <result property="country" column="country" />
        <result property="platform" column="platform" />
        <result property="postTime" column="postTime" />
        <result property="likes" column="likes" />
        <result property="content" column="content" />
        <result property="language" column="language" />
        <result property="translated" column="translated" />
        <association property="monitorWork"
                     javaType="com.example.demo.entity.MonitorWork">
            <id property="id" column="workId" />
            <result property="name" column="name" />
            <result property="category" column="category" />
        </association>
    </resultMap>

    <select id="countPlatformByWorkId" resultType="com.example.demo.entity.dto.CommentPlatformDto">
        select count(id) as count, platform
        from raw_comment
        where workId = #{workId}
        group by platform
    </select>

    <select id="selectAllCountry" resultType="java.lang.String">
        select country from
        (select country, count(*) as cnt from raw_comment
        <if test="workId != null and workId != ''">
            where workId = #{workId}
        </if>
        group by country
        having cnt > 3
        order by cnt desc) as tab
    </select>

    <select id="selectAllPlatform" resultType="java.lang.String">
        select distinct platform from raw_comment
    </select>

    <select id="selectPage2" resultMap="commentsByPage">
        select cmt.*, mw.name name, mw.category category
        from raw_comment cmt
            inner join monitor_work mw on(cmt.workId = mw.id)
        where mw.name like '%${workName}%'
          and cmt.content like '%${content}%'
          and cmt.country like '%${country}%' and cmt.platform like '%${platform}%'
        <if test="postTime != null and postTime != ''">
            and cmt.postTime = #{postTime}
        </if>
        order by cmt.id desc
    </select>

    <select id="selectHotComments" resultMap="commentsByPage">
        select cmt.*, mw.name name, mw.category category
        from hot_comments cmt
        left join monitor_work mw on(cmt.workId = mw.id)
        where mw.name like '%${workName}%'
        and cmt.content like '%${content}%'
        and cmt.country like '%${country}%' and cmt.platform like '%${platform}%'
        <if test="postTime != null and postTime != ''">
            and cmt.postTime = #{postTime}
        </if>
        order by likes desc
    </select>
    <select id="getCommentNumByCountryAndWorkId" resultType="com.example.demo.entity.vo.CountryCommentNum">
        select COUNT(*) as cnt,country from raw_comment
        <if test="workId !=null and workId !=''">
            where workId=#{workId}
        </if>
        GROUP BY country
        order by cnt asc
    </select>
    <select id="selectCommentSumByLanguage" resultType="org.springframework.data.util.Pair"
            parameterType="java.lang.String">
        SELECT
            LANGUAGE as first,
            count(LANGUAGE) as second
        FROM `raw_comment`
        <if test="language != null and language != ''">
            where language like '%${language}%'
        </if>
        GROUP BY LANGUAGE
        ORDER BY second DESC
    </select>
    <select id="selectCommentSumByPlatform" resultType="com.example.demo.entity.dto.CommentPlatformDto">
        SELECT platform,
               count(platform) as count
        FROM `raw_comment`
        GROUP BY platform
        ORDER BY count DESC
    </select>
    <select id="selectCommentSumBySubCategory" resultType="org.springframework.data.util.Pair">
        SELECT mw.subCategory as first,
        count(mw.subCategory) as second
        FROM `raw_comment` as rc
        inner join monitor_work as mw on(rc.workId=mw.id)
        where mw.subCategory is not null
        <if test="subCategory != null and subCategory != ''">
            and mw.subCategory like '%${subCategory}%'
        </if>
        group by first
        order by second desc
    </select>
    <select id="selectPlatformByWorkId" resultType="java.lang.String">
        select DISTINCT platform FROM raw_comment where workId=#{workId}
    </select>
    <select id="getCommentNumByWorkIdAndYear" resultType="com.example.demo.entity.vo.MonthCommentNum">
        select COUNT(*) count,(date_format(postTime,'%Y-%m')) time
        from raw_comment
        where country=#{country} and PERIOD_DIFF(date_format(now(),'%Y%m'),date_format(postTime,'%Y%m'))=#{month}
        <if test="workId != null and workId != ''">
            and workId=#{workId}
        </if>
        group by time

    </select>
    <select id="getPlatformByWorkIdAndCountry" resultType="java.lang.String">
        select DISTINCT platform from raw_comment
        where country=#{country}
        <if test="workId != null and workId != ''">
            and workId=#{workId}
        </if>
    </select>
    <select id="selectCommentCountBySubCategoryAndOrigin" resultType="java.lang.Integer">
        select count(*) from raw_comment
        where workId in (
        select id from monitor_work where 1=1
        <if test="hunanOnly == true">
            and isHunanWork = 1
        </if>
        <if test="subCategory != null and subCategory != ''">
            and subCategory = #{subCategory}
        </if>
        <if test="origin != null and origin != ''">
            and origin = #{origin}
        </if>
            )
    </select>
    <select id="getWorkCommentLikesNumByWorkId" resultType="java.lang.Integer">
        select sum(likes) as likesCnt
        from raw_comment
        where workId=#{workId}
    </select>


</mapper>
