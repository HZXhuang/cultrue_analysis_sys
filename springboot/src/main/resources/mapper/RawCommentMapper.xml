<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.RawCommentMapper">

    <resultMap id="commentsByPage" type="com.example.demo.entity.RawComment">
        <id column="id" property="id" />
        <result property="workId" column="workId" />
        <result property="sentiment" column="sentiment" />
        <result property="country" column="country" />
        <result property="platform" column="platform" />
        <result property="postTime" column="postTime" />
        <result property="likes" column="likes" />
        <result property="content" column="content" />
        <result property="translated" column="translated" />
        <association property="monitorWork"
                     javaType="com.example.demo.entity.MonitorWork">
            <id property="id" column="workId" />
            <result property="name" column="name" />
            <result property="category" column="category" />
        </association>
    </resultMap>

    <select id="countPlatformByWorkId" resultType="com.example.demo.entity.dto.CommentPlatformDto">
        select count(id) as count, platform
        from raw_comment
        where workId = #{workId}
        group by platform
    </select>

    <select id="selectAllCountry" resultType="java.lang.String">
        select country from
        (select country, count(*) as cnt from raw_comment
        <if test="workId != null and workId != ''">
            where workId = #{workId}
        </if>
        group by country
        having cnt > 3
        order by cnt desc) as tab;
    </select>

    <select id="selectAllPlatform" resultType="java.lang.String">
        select distinct platform from raw_comment
    </select>

    <select id="selectPage2" resultMap="commentsByPage">
        select cmt.*, mw.name name, mw.category category
        from raw_comment cmt
            inner join monitor_work mw on(cmt.workId = mw.id)
        where mw.name like '%${workName}%'
          and cmt.content like '%${content}%'
          and cmt.country like '%${country}%' and cmt.platform like '%${platform}%'
        <if test="postTime != null and postTime != ''">
            and cmt.postTime = #{postTime}
        </if>
        order by cmt.id
    </select>

    <select id="selectPage3" resultMap="commentsByPage">
        select cmt.*, mw.name name, mw.category category
        from raw_comment cmt
        inner join monitor_work mw on(cmt.workId = mw.id)
        where mw.name like '%${workName}%'
        and cmt.content like '%${content}%'
        and cmt.country like '%${country}%' and cmt.platform like '%${platform}%'
        <if test="postTime != null and postTime != ''">
            and cmt.postTime = #{postTime}
        </if>
        order by cmt.likes desc
    </select>
</mapper>
