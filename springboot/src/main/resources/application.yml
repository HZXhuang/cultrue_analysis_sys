server:
  port: 9090

spring:
  # 数据库配置
  datasource:
    # 数据库驱动
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 连接数据库的url
    url: jdbc:mysql://localhost:3306/analysis_sys_db?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true
    # 用户名
    username: root
    # 密码
    password: song
    # 数据库连接池的类型
    type: com.alibaba.druid.pool.DruidDataSource
    hikari:
      pool-name: DateHikariCP
      # 最小空闲连接数
      minimum-idle: 5
      # 空闲连接最大存活时间，默认600000（10分钟）
      idle-timeout: 180000
      # 最大连接数，默认10
      maximum-pool-size: 15
      # 从连接池返回的连接自动提交
      auto-commit: true
      # 连接最大存活时间，1800000（30分钟）
      max-lifetime: 1800000
      # 连接超时时间，默认30000（30秒）
      connection-timeout: 30000
      # 测试连接是否可用的查询语句
#      connection-test-query: SELECT * FROM user

  # redis配置
  redis:
    # 服务器地址
    host: localhost
    # 端口
    port: 6379
    # redis密码
    password:
    # 数据库，默认是0
    database: 0
    # 超时时间
    timeout: 1209600000ms
    lettuce:
      pool:
        # 最大连接数，默认是8
        max-active: 10
        # 最大连接阻塞等待时间，默认是-1
        max-wait: 10000ms
        # 最大空闲连接，默认是8
        max-idle: 100
        # 最小空闲连接，默认是0
        min-idle: 5

  jackson:
    # 时区设置
    time-zone: GMT+8

  # servlet的设置
  servlet:
    multipart:
      # 上传文件的最大大小按
      max-file-size: 100MB

  # 邮件服务配置
  mail:
    # 邮件服务器地址
    host: 123.126.97.113
    # 用户名
    username: hzx1966752024@163.com
    # POP3/IMAP/SMTP服务授权码
    password: JCLECTJHLVEACWXQ
    # 昵称
    nickname: hzx

    properties:
      mail:
        # 是否开启 DEBUG 模式，这样，邮件发送过程的日志会在控制台打印出来，方便排查错误
        debug: false
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          socketFactory:
            port: 465
            # 配置SSL 加密工厂
            class: javax.net.ssl.SSLSocketFactory
            fallback: false
    # 端口 465或994
    port: 465
    # 默认的邮件编码为UTF-8
    default-encoding: UTF-8



# mybatis-plus配置
mybatis-plus:
  configuration:
    # 开启SQL日志
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 关闭SQL日志
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl
    # 不开启驼峰转换
    map-underscore-to-camel-case: false

# 自定义配置
file:
  ip: localhost


# jwt配置
jwt:
  # JWT存储的请求头
  tokenHeader: Authorization
  # JWT加解密使用密钥
  secret: abcriskflashcngpobmx
  # JWT的超期限时时间（1000*60*60*24*4）4天，即4天
  expiration: 345600000
#  expiration: 21600000
  # JWT负载中拿到的开头
  tokenHead: Bearer

role:
  roleId: 1


# oss配置
aliyun:
  oss:
    endpoint: oss-cn-guangzhou.aliyuncs.com
    bucket-name: hzx-oss
    access-key-id: LTAI5tQcjbvbjA5JjMMkUkc1
    access-key-secret: GpUJboqMqecakDNBSVlUPhnaKfjGfY


# Swagger2配置
my:
  swagger:
    enabled: true
    docked:
      title: 接口文档
      description: 在线接口文档
      version: 0.1
      basePackage: com.example.demo.controller

scrap_host: 426qb33844.goho.co
remote_host1: 426qb33844.goho.co
remote_host2: 426qb33844.goho.co
remote_host3: 139.196.127.25:8055

# 都可以访问的接口
interceptorconfig:
  path:
    # 这些路径可以匿名访问
    permitAll:
      - /api/login
      - /api/register
      - /api/loginAdmin
      - /api/comment/countries
      - /api/comment/getCommentNumByWorkIdAndCountry
      - /api/comment/getAllCommentNumBySubCategory
      - /api/comment/platforms
      - /api/comment/byPage
      - /api/comment/byPage2
      - /api/comment/getHotComment
      - /api/comment/getHighCommentByPlatform
      - /api/comment/getCommentNumByWorkIdAndYear
      - /api/comment/getPlatformByWorkIdAndCountry
      - /api/comment/getPolarityComment
      - /api/hot-work/byPage
      - /api/hot-work/byPage2
      - /api/hot-work/id/
      - /api/monitor-request/id
      - /api/monitor-request/byPage
      - /api/monitor-work/countPlatform
      - /api/polarity/query-list
      - /api/polarity/countDaily
      - /api/polarity/countDayInterval
      - /api/polarity/getMonthAnalysisResult
      - /api/polarity/getWorldPolarity
      - /api/polarity/getWorldPolarityByYear
      - /api/sentiment/countDaily
      - /api/word-freq/query-res
      - /api/sentiment/getWorldSentiment
      - /api/polarity/getDistribute
      - /api/polarity/countMonthInterval
      - /api/subject-analysis/polarityByWorkIdAndSubject
      - /api/work-score/findByWorkId
      - /api/polarity/getCountries
      - /api/subject-analysis/getSubjectsByWorkId
      - /api/monitor-work/byUserId
      - /api/monitor-work/byPage2
      - /api/monitor-work/getAllOrigin
      - /api/monitor-work/getAllBookCategories
      - /api/monitor-work/getAllVideoCategories
      - /api/monitor-work/getHunanWork
      - /api/monitor-work/getWorkAndCommentNumByCategory
      - /api/monitor-work/getWorkByCategory
      - /api/comment/getCommentNum
      - /api/polarity/countYearPolarity
      - /api/files/get/*
      - /api/*/id/*
      - /api/comment/getCommentNumBySubCategory
      - /api/comment/getCommentNumByLanguage
      - /api/comment/getCommentNumByPlatform
