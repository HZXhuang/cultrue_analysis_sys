<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">

    <!--<resultMap id="userMap" type="com.example.demo.entity.User">
        <result property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <collection property="bookList" javaType="ArrayList" ofType="com.example.demo.entity.Book">
            <result column="b_id" property="id" />
            <result column="b_name" property="name" />
            <result column="b_price" property="price" />
        </collection>
    </resultMap>-->
    <update id="updatePass" parameterType="map">
        update user set password = #{newPwd} where id = #{id}
    </update>

    <select id="findPage" resultType="com.example.demo.entity.User">
        SELECT *
        from user
        where name like concat('%', #{name}, '%') and username like concat('%', #{username}, '%')
    </select>

    <select id="countWorkUnit" resultType="com.example.demo.entity.dto.UserWorkUnitDto">
        select count(id) count, workUnit from user group by workUnit
    </select>
    <select id="selectByUsername" resultType="com.example.demo.entity.User" parameterType="java.lang.String">
        select * from user where username=#{username}
    </select>
    <select id="selectEmailsByWorkId" resultType="com.example.demo.entity.User" parameterType="java.lang.Integer">
        select distinct email, username, name
        from `user`
        where id in (
            select userId
            from monitor_request
            where workId = #{workId}
        ) and email is not null
    </select>
</mapper>
